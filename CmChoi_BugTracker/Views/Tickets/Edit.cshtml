@model CmChoi_BugTracker.Models.Ticket

@{
    ViewBag.Title = "Edit";
}
<style>
    label {
        color: #8bff8a !important;
    }

    body {
        font-size: 15px;
    }

    h2 {
        color: #0a0a0a;
    }

    .content-body {
        padding: 1px 200px 70px 100px !important;
    }
</style>


<h2>Edit</h2>
<div>
    @if (User.IsInRole("Admin"))
    {
        @Html.ActionLink("Back to List", "Index","Tickets", null, new { style = "color:white; font-size:14px;" })
    }
    @if (User.IsInRole("Submitter") || User.IsInRole("Developer") || User.IsInRole("ProjectManager"))
    {
        @Html.ActionLink("Back to List", "MyIndex","Tickets", null, new { style = "color:white; font-size:14px;" })
    }
    </div>
<br />
<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Created)
    @Html.HiddenFor(model => model.ProjectId)



    <div class="form-group">
        @Html.LabelFor(model => model.TicketTypeId, "Ticket Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.TicketStatusId, "Ticket Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.TicketPriorityId, "Ticket Priority", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.AssignedToUserId, "Assigned To User", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AssignedToUserId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OwnerUserId, "Owner User", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OwnerUserId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OwnerUserId, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(model => model.Title, "Title", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <input type="submit" value="Save" class="btn btn-sm btn-warning" />
        </div>
    </div>
</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
